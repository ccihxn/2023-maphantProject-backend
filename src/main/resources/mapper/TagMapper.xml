<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tovelop.maphant.mapper.TagMapper">
    <insert id="insertTag" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tag (name, category_id, cnt)
        VALUES (#{tagName}, #{categoryId}, 1)
            ON DUPLICATE KEY UPDATE cnt = cnt + 1
        <selectKey/>
    </insert>
    <delete id="deleteTag">
        DELETE FROM board_tag
        WHERE board_id = #{boardId} AND tag_id = #{tagId}
    </delete>
    <select id="getTagExistenceInBoard">
        SELECT COUNT(*)
        FROM board_tag
        WHERE board_id = #{boardId} AND tag_id = #{tagId}
    </select>
    <insert id="insertBoardTag">
        INSERT INTO board_tag (board_id, tag_id)
        VALUES (#{boardId}, #{tagId})
    </insert>
    <delete id="deleteBoardTag">
        DELETE FROM board_tag
        WHERE board_id = #{boardId}
    </delete>
    <select id="getTagByName" resultType="TagDTO">
        SELECT *
        FROM tag
        WHERE name = #{name}
    </select>
    <select id="getTagList" resultType="TagDTO">
        SELECT *
        FROM tag
    </select>
    <select id="getTagListByBoardId" resultType="TagDTO">
        SELECT *
        FROM tag
        WHERE id IN (
                SELECT tag_id
                FROM board_tag
                WHERE board_id = #{board_id}
            )
    </select>
    <delete id="minusTagCnt">
        UPDATE tag
        SET cnt = cnt - 1
        WHERE id = #{id}
    </delete>

    <insert id="plusTagCnt">
        UPDATE tag
        SET cnt = cnt + 1
        WHERE id = #{id}
    </insert>

    <select id="getTagCnt">
        SELECT COUNT(cnt)
        FROM tag
        WHERE id = #{id}
    </select>

    <select id="findBoardTags" resultType="ReqTagDTO">
        SELECT tag.id as id,
               tag.name as name
        FROM board_tag
        INNER JOIN tag ON board_id = #{board_id} AND tag_id = tag.id
    </select>
    <select id="getTagId">
        SELECT id
        FROM tag
        WHERE name = #{tagName}
    </select>
    <select id="findBoardByTagName" resultType="HotBoardDto">
        SELECT
            b.id AS boardId,
            title,
            SUBSTRING(b.body, 1, 30) as body,
            b.created_at AS createdAt,
            b.modified_at AS modifiedAt,
            IF(is_anonymous, '익명',u.nickname) AS userNickname,
            comment_cnt AS commentCnt,
            like_cnt AS likeCnt,
            is_anonymous AS isAnonymous,
            is_hide AS isHide,
            IF(blike.user_id IS NOT NULL, 1, 0) as isLike,
            b.images_url as imagesUrlString,
            GROUP_CONCAT(t.name ORDER BY t.name ASC SEPARATOR ',') as tagStrings,
            type_id AS typeId,
            board_type.name AS type
        FROM tag t
            INNER JOIN board_tag bt ON t.id = bt.tag_id AND t.name LIKE CONCAT(#{tagName}, '%')
            INNER JOIN board b ON bt.board_id = b.id
            INNER JOIN user u ON b.user_id = u.id
            LEFT OUTER JOIN board_like blike ON b.id = blike.board_id AND blike.user_id = #{userId}
            INNER JOIN board_type ON b.type_id = board_type.id
        WHERE b.category_id = #{categoryId} AND
            b.state = 0 AND
            is_hide = 0
        GROUP BY b.id
        LIMIT #{pagingDto.recordSize} OFFSET #{pagingDto.offset}
    </select>

    <select id="countBoardByTagName">
        SELECT
            COUNT(distinct b.id)
        FROM tag t
                 INNER JOIN board_tag bt ON t.id = bt.tag_id AND t.name LIKE CONCAT(#{tagName}, '%')
                 INNER JOIN board b ON bt.board_id = b.id
                 INNER JOIN user u ON b.user_id = u.id
                 LEFT OUTER JOIN board_like blike ON b.id = blike.board_id AND blike.user_id = #{userId}
                 INNER JOIN board_type ON b.type_id = board_type.id
        WHERE b.category_id = #{categoryId} AND
            b.state = 0 AND
            is_hide = 0
    </select>
</mapper>
